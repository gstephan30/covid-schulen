NAME_2 = str_replace_all(NAME_2, "Altenkirchen", "Altenkirchen (Westerwald)"),
NAME_2 = str_replace_all(NAME_2, "Frankenthal", "Frankenthal (Pfalz)"),
NAME_2 = str_replace_all(NAME_2, "Neustadt a.d. Wstr.", "Neustadt an der Weinstraße"),
NAME_2 = str_replace_all(NAME_2, "Saar-Pfalz-Kreis", "Saarpfalz-Kreis")) %>%
left_join(land_ccs)
clean_kpi_kreise <- df_cc %>%
mutate(category = case_when(grepl("ohne Präsen", LK) ~ "schools_closed",
grepl("^Schulen mit eingeschränktem", LK) ~ "schools_limited",
grepl("Darunter: Schulen", LK) ~ "schools_limited_distance",
grepl("Lerngruppen an Schulen mit eingeschränktem", LK) ~ "schools_classes_distance",
grepl("einbezogene Verwaltungseinheiten", LK) ~ "schools_total",
grepl("infizierte SuS", LK) ~ "students_infected",
grepl("Quarantäne befindliche SuS", LK) ~ "students_quarantine",
grepl("einbezogene Schüler", LK) ~ "students_total",
grepl("infizierte Lehrkräfte", LK) ~ "teacher_infected",
grepl("Quarantäne befindliche Lehrkräfte", LK) ~ "teacher_quarantine",
grepl("einbezogene Lehrkräfte", LK) ~ "teacher_total",
TRUE ~ "invalid")) %>%
select(kw_label, category, key,  CC_2, values)
clean_kpi_kreise
clean_kpi_kreise %>%
pivot_wider(names_from = category,
values_from = values)
getwd()
clean_kpi_kreise %>%
pivot_wider(names_from = category,
values_from = values) %>%
openxlsx::write.xlsx("20210914_kmk_kreise.xlsx")
library(dplyr)
library(stringr)
library(readxl)
library(tidyr)
source("R/kmk_scrap.R")
scrap_kmk()
data_files <- list.files(path = "data_raw/kmk.org/", full.names = TRUE) %>%
grep("chulart", .,  value = TRUE, invert = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(week = str_remove_all(file, "Covid-19|Covid19|-|_|Werte|Zahlen|neu|.xlsx|data/"),
week = str_extract(week, "[0-9][0-9]|[0-9]"),
week = as.numeric(week),
year = ifelse(week > 45, 2020, 2021)) %>%
arrange(week)
## subset the data
grep_kpi <- function(file) {
#file <- data_files[1, 1] %>% pull()
print(paste0("Reading file: ", file))
data <- file %>%
read_excel(skip = 3) %>%
filter(!is.na(Land),
!grepl("Anmerk", Land))
data_date <- data[1, ] %>%
select(-Land, -contains("summe"), -contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = everything(),
names_to = "state",
values_to = "date"
) %>%
mutate(date = format(as.Date(as.numeric(date), "1899-12-30"), "%Y-%m-%d")) %>%
count(date, sort = TRUE) %>%
.[1, 1] %>%
pull()
kpi_data <- data %>%
select(Land, contains("Bereinigt"),
bl_BW = starts_with("BW", ignore.case = FALSE),
bl_BY = starts_with("BY", ignore.case = FALSE),
bl_BE = starts_with("BE", ignore.case = FALSE),
bl_BB = starts_with("BB", ignore.case = FALSE),
bl_HB = starts_with("HB", ignore.case = FALSE),
bl_HH = starts_with("HH", ignore.case = FALSE),
bl_HE = starts_with("HE", ignore.case = FALSE),
bl_MV = starts_with("MV", ignore.case = FALSE),
bl_NI = starts_with("NI", ignore.case = FALSE),
bl_NW = starts_with("NW", ignore.case = FALSE),
bl_RP = starts_with("RP", ignore.case = FALSE),
bl_SL = starts_with("SL", ignore.case = FALSE),
bl_SN = starts_with("SN", ignore.case = FALSE),
bl_ST = starts_with("ST", ignore.case = FALSE),
bl_SH = starts_with("SH", ignore.case = FALSE),
bl_TH = starts_with("TH", ignore.case = FALSE)) %>%
janitor::clean_names() %>%
mutate(ind = lag(land)) %>%
#select(key = ind, 2, 3) %>%
select(land, everything(), -ind) %>%
mutate(ind = ifelse(grepl("Anteil", land), NA, land),
ind2 = case_when(grepl("ohne Präsen", land) ~ "schools_closed",
grepl("^Schulen mit eingeschränktem", land) ~ "schools_limited",
grepl("Darunter: Schulen", land) ~ "schools_limited_distance",
grepl("einbezogene Schulen", land) ~ "schools_total",
grepl("infizierte Schüler", land) ~ "students_infected",
grepl("Quarantäne befindliche Schüler", land) ~ "students_quarantine",
grepl("einbezogene Schüler", land) ~ "students_total",
grepl("infizierte Lehrkräfte", land) ~ "teacher_infected",
grepl("Quarantäne befindliche Lehrkräfte", land) ~ "teacher_quarantine",
grepl("einbezogene Lehrkräfte", land) ~ "teacher_total",
grepl("Stichtag", land) ~ "date",
TRUE ~ "invalid"),
ind2 = ifelse(ind2 == "invalid", NA, ind2)) %>%
fill(ind2, .direction = "down") %>%
mutate(ind3 = ifelse(grepl("Anteil", land), paste0(ind2, "_perc"), ind2)) %>%
select(category = ind3, contains("bl_"), contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = -category,
names_to = "key",
values_to = "value"
) %>%
filter(!grepl("bereinigte", value)) %>%
filter(!(category == "date" & key == "bereinigter_anteil"))
return(
list(
"data_date" = data_date,
"kpi_data" = kpi_data
)
)
}
df_kpi <- data_files %>%
rowwise() %>%
mutate(kpi = map(file, grep_kpi)) %>%
unnest_wider(kpi)
clean_kpi <- df_kpi %>%
unnest_wider(kpi_data) %>%
select(4:7) %>%
unnest(cols = c(category, key, value)) %>%
mutate(value = as.numeric(value))
clean_kpi
heute_str <- gsub("-", "", Sys.Date())
saveRDS(clean_kpi, file = paste0("data_clean/", heute_str, "_clean_kpi_bl.rds"))
library(dplyr)
library(stringr)
library(lubridate)
library(purrr)
library(tidyr)
library(ggplot2)
kpi_kreis <- list.files(path = "data_clean/", pattern = "kreise", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1] %>%
readRDS() %>%
mutate(kw_label = ifelse(nchar(kw_label) == 7, kw_label, str_replace_all(kw_label, "-", "-0")),
values = as.numeric(values),
week_date = as.Date(paste0(kw_label, "-1"), "%Y-%U-%u"))
kreise_wide <- kpi_kreis %>%
pivot_wider(
names_from = "category",
values_from = "values",
values_fill = 0
) %>%
mutate(students_perc = students_infected/students_total*100,
teacher_perc = teacher_infected/teacher_total*100)
kpi_kreis
list.files(path = "data_clean/", pattern = "kreise", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1]
list.files("data_clean/", pattern =  "_clean_kpi_bl.rds", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1]
library(dplyr)
library(tidyr)
library(stringr)
library(lubridate)
library(ggplot2)
bl_data <- list.files("data_clean/", pattern =  "_clean_kpi_bl.rds", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1] %>%
readRDS() %>%
filter(year(data_date) > 2020) %>%
pivot_wider(
names_from = category,
values_from = value
) %>%
mutate(students_perc = students_infected/students_total*100,
teacher_perc = teacher_infected/teacher_total*100)
bl_data
View(bl_data)
bl_data
as_date("bl_data")
as_date("44252")
as.Date("44252", origin = "1970-01-01")
as.Date(44252, origin = "1970-01-01")
as.Date(44252, origin = "1970-01-01")
as.Date(44252, origin = "1900-01-01")
bl_data %>%
mutate(date = as.Date(date, origin = "1900-01-01"))
bl_data %>%
mutate(date = as.Date(date, origin = "1900-01-01")) %>% View()
bl_data %>%
mutate(date = as.Date(date, origin = "1900-01-01")) %>% readr::write_excel_csv2("kmk_bl-20211018.csv")
library(dplyr)
library(stringr)
library(readxl)
library(tidyr)
#library(purrr)
source("R/kmk_scrap.R")
scrap_kmk()
data_files <- list.files(path = "data_raw/kmk.org/", full.names = TRUE) %>%
grep("chulart", .,  value = TRUE, invert = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(week = str_remove_all(file, "Covid-19|Covid19|-|_|Werte|Zahlen|neu|.xlsx|data/"),
week = str_extract(week, "[0-9][0-9]|[0-9]"),
week = as.numeric(week),
year = ifelse(week > 45, 2020, 2021)) %>%
arrange(week)
## subset the data
grep_kpi <- function(file) {
#file <- data_files[1, 1] %>% pull()
print(paste0("Reading file: ", file))
data <- file %>%
read_excel(skip = 3) %>%
filter(!is.na(Land),
!grepl("Anmerk", Land))
data_date <- data[1, ] %>%
select(-Land, -contains("summe"), -contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = everything(),
names_to = "state",
values_to = "date"
) %>%
mutate(date = format(as.Date(as.numeric(date), "1899-12-30"), "%Y-%m-%d")) %>%
count(date, sort = TRUE) %>%
.[1, 1] %>%
pull()
kpi_data <- data %>%
select(Land, contains("Bereinigt"),
bl_BW = starts_with("BW", ignore.case = FALSE),
bl_BY = starts_with("BY", ignore.case = FALSE),
bl_BE = starts_with("BE", ignore.case = FALSE),
bl_BB = starts_with("BB", ignore.case = FALSE),
bl_HB = starts_with("HB", ignore.case = FALSE),
bl_HH = starts_with("HH", ignore.case = FALSE),
bl_HE = starts_with("HE", ignore.case = FALSE),
bl_MV = starts_with("MV", ignore.case = FALSE),
bl_NI = starts_with("NI", ignore.case = FALSE),
bl_NW = starts_with("NW", ignore.case = FALSE),
bl_RP = starts_with("RP", ignore.case = FALSE),
bl_SL = starts_with("SL", ignore.case = FALSE),
bl_SN = starts_with("SN", ignore.case = FALSE),
bl_ST = starts_with("ST", ignore.case = FALSE),
bl_SH = starts_with("SH", ignore.case = FALSE),
bl_TH = starts_with("TH", ignore.case = FALSE)) %>%
janitor::clean_names() %>%
mutate(ind = lag(land)) %>%
#select(key = ind, 2, 3) %>%
select(land, everything(), -ind) %>%
mutate(ind = ifelse(grepl("Anteil", land), NA, land),
ind2 = case_when(grepl("ohne Präsen", land) ~ "schools_closed",
grepl("^Schulen mit eingeschränktem", land) ~ "schools_limited",
grepl("Darunter: Schulen", land) ~ "schools_limited_distance",
grepl("einbezogene Schulen", land) ~ "schools_total",
grepl("infizierte Schüler", land) ~ "students_infected",
grepl("Quarantäne befindliche Schüler", land) ~ "students_quarantine",
grepl("einbezogene Schüler", land) ~ "students_total",
grepl("infizierte Lehrkräfte", land) ~ "teacher_infected",
grepl("Quarantäne befindliche Lehrkräfte", land) ~ "teacher_quarantine",
grepl("einbezogene Lehrkräfte", land) ~ "teacher_total",
grepl("Stichtag", land) ~ "date",
TRUE ~ "invalid"),
ind2 = ifelse(ind2 == "invalid", NA, ind2)) %>%
fill(ind2, .direction = "down") %>%
mutate(ind3 = ifelse(grepl("Anteil", land), paste0(ind2, "_perc"), ind2)) %>%
select(category = ind3, contains("bl_"), contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = -category,
names_to = "key",
values_to = "value"
) %>%
filter(!grepl("bereinigte", value)) %>%
filter(!(category == "date" & key == "bereinigter_anteil"))
return(
list(
"data_date" = data_date,
"kpi_data" = kpi_data
)
)
}
df_kpi <- data_files %>%
rowwise() %>%
mutate(kpi = map(file, grep_kpi)) %>%
unnest_wider(kpi)
clean_kpi <- df_kpi %>%
unnest_wider(kpi_data) %>%
select(4:7) %>%
unnest(cols = c(category, key, value)) %>%
mutate(value = as.numeric(value))
heute_str <- gsub("-", "", Sys.Date())
saveRDS(clean_kpi, file = paste0("data_clean/", heute_str, "_clean_kpi_bl.rds"))
library(dplyr)
library(tidyr)
library(stringr)
library(lubridate)
library(ggplot2)
bl_data <- list.files("data_clean/", pattern =  "_clean_kpi_bl.rds", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1] %>%
readRDS() %>%
filter(year(data_date) > 2020) %>%
pivot_wider(
names_from = category,
values_from = value
) %>%
mutate(students_perc = students_infected/students_total*100,
teacher_perc = teacher_infected/teacher_total*100)
list.files("data_clean/", pattern =  "_clean_kpi_bl.rds", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1]
bl_data %>%
mutate(date = as.Date(date, origin = "1900-01-01")) %>% readr::write_excel_csv2("kmk_bl-20211018.csv")
as.Date(44252, origin = "1900-01-01")
bl.shp <- raster::getData("GADM", country = "DEU", level = 1)
bl_tidy <- bl.shp %>%
broom::tidy(region = "CC_1")
shape_data <- bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1) %>%
left_join(
bl_data %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
)
ggplot() +
geom_polygon(data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")), mapping = aes(long, lat, group = group, fill = students_perc),
color = "black", fill = NA) +
coord_quickmap()
load("leaflet_maps/recent_maps_bl.RData")
load("leaflet_maps/recent_maps_kreise.RData")
shape_data
bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1"))
ggplot() +
geom_polygon(data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")), mapping = aes(long, lat, group = group, fill = students_perc),
color = "black", fill = students_infected_perc) +
coord_quickmap()
shape_data
bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1) %>%
left_join(
bl_data %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
) %>%
mutate(date = as.Date(date, origin = "1899-01-01"))
bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1) %>%
left_join(
bl_data %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
) %>%
mutate(date = as.Date(date, origin = "1898-12-31"))
9
shape_data <- bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1) %>%
left_join(
bl_data %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
) %>%
mutate(date = as.Date(date, origin = "1899-01-01"))
shape_data$date %>% unique()
shape_data$data_date %>% unique()
ggplot() +
geom_polygon(data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")), mapping = aes(long, lat, group = group, fill = students_perc),
color = "black", fill = NA) +
coord_quickmap() +
facet_wrap(~data_date)
bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")) %>%
filter(data_date == max(data_date))
ggplot() +
geom_polygon(
data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")) %>%
filter(data_date == max(data_date)),
aes(long, lat, group = group, fill = students_perc),
color = "black", fill = NA) +
coord_quickmap()
ggplot() +
geom_polygon(
data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")) %>%
filter(data_date == max(data_date)),
aes(long, lat, group = group, fill = students_perc),
color = "black") +
coord_quickmap()
ggplot() +
geom_polygon(
data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")),
aes(long, lat, group = group, fill = students_perc),
color = "black") +
coord_quickmap() +
theme_void() +
facet_wrap(~data_date, nrow = 3) +
labs(fill = "Infizierte in %",
title = "Infizierte Schüler in Deutschland",
subtitle = "Datenquelle @ KWK") +
theme(legend.position = "bottom",
plot.margin = grid::unit(c(0, 0, 0, 0), "mm"))
g_bl_all <- ggplot() +
geom_polygon(
data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")),
aes(long, lat, group = group, fill = students_perc),
color = "black") +
coord_quickmap() +
theme_void() +
facet_wrap(~data_date, nrow = 3) +
labs(fill = "Infizierte in %",
title = "Infizierte Schüler in Deutschland",
subtitle = "Datenquelle @ KWK") +
theme(legend.position = "bottom",
plot.margin = grid::unit(c(0, 0, 0, 0), "mm"))
ggsave(g_bl_all, filename = "leaflet_maps/gall_bl.png", dpi = 300, scale = 4)
library(dplyr)
library(stringr)
library(lubridate)
library(tidyr)
library(leaflet)
library(leaflet.extras)
library(leafpop)
library(htmltools)
library(htmlwidgets)
kpi_kreis <- list.files(path = "data_clean/", pattern = "clean_kpi_bl", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1] %>%
readRDS()
kpi_kreis
kpi_kreis %>%
filter(year(data_date) == 2021) %>%
pivot_wider(
names_from = "category",
values_from = "value",
values_fill = 0
) %>%
separate(key, c("bl", "bl2"), remove = FALSE)
kpi_kreis %>%
filter(year(data_date) == 2021) %>%
pivot_wider(
names_from = "category",
values_from = "value",
values_fill = 0
) %>%
separate(key, c("bl", "bl2"), remove = FALSE)
kpi_kreis %>%
filter(year(data_date) == 2021) %>%
pivot_wider(
names_from = "category",
values_from = "value",
values_fill = 0
) %>%
separate(key, c("bl", "bl2"), remove = FALSE)
kpi_kreis %>%
filter(year(data_date) == 2021) %>%
pivot_wider(
names_from = "category",
values_from = "value",
values_fill = 0
) %>%
separate(key, c("bl", "bl2"), remove = FALSE) %>%
select(data_date, key, bl, bl2, date, contains("quara"))
