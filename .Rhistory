select(key) %>% distinct() %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key)) %>%
filter(grepl("DE.", key)) %>%
mutate(test = "klappt")
)
bl_data %>%
select(key) %>% distinct() %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key)) %>%
filter(grepl("DE.", key)) %>%
mutate(test = "klappt")
bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1)
bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1) %>%
left_join(
bl_data %>%
select(key) %>% distinct() %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key)) %>%
mutate(test = "klappt")
)
bl_data
bl_data %>%
select(key) %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
bl_data %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1) %>%
left_join(
bl_data %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
)
ggplot() +
geom_polygon(data = bl_tidy, mapping = aes(long, lat, group = group),
color = "black", fill = NA) +
coord_quickmap()
bl_tidy
shape_data <- bl.shp@data %>%
as_tibble() %>%
select(CC_1, key = HASC_1, NAME_1) %>%
left_join(
bl_data %>%
mutate(key = str_replace(key, "bl_", "DE."),
key = str_to_upper(key),
key = str_replace_all(key, "DE.BB", "DE.BR")) %>%
filter(grepl("DE.", key))
)
ggplot() +
geom_polygon(data = shape_data, mapping = aes(long, lat, group = group, fill = students_perc),
color = "black", fill = NA) +
coord_quickmap()
shape_data
bl_tidy
shape_data
ggplot() +
geom_polygon(data = bl_tidy %>%
left_join(shape_data), mapping = aes(long, lat, group = group, fill = students_perc),
color = "black", fill = NA) +
coord_quickmap()
bl_tidy
bl_tidy
shape_data
ggplot() +
geom_polygon(data = bl_tidy %>%
left_join(shape_data, by = c("ID" = "CC_1")), mapping = aes(long, lat, group = group, fill = students_perc),
color = "black", fill = NA) +
coord_quickmap()
ggplot() +
geom_polygon(data = bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1")), mapping = aes(long, lat, group = group, fill = students_perc),
color = "black", fill = NA) +
coord_quickmap()
bl_tidy %>%
left_join(shape_data, by = c("id" = "CC_1"))
library(rvest)
library(purrr)
scrap_kmk <- function() {
# Scrapping the data
link <- "https://www.kmk.org/dokumentation-statistik/statistik/schulstatistik/schulstatistische-informationen-zur-covid-19-pandemie.html"
xlsx_files <- read_html(link) %>%
html_nodes("a") %>%
html_attr("href") %>%
grep("xlsx", ., value = TRUE) %>%
paste0("https://www.kmk.org", .)
# Downloading the data
map(xlsx_files, function(x) download.file(x, destfile = paste0("data_raw/kmk.org/",  basename(x)), mode = "wb"))
## TODO stop downloading files, already downloaded
}
library(dplyr)
library(stringr)
library(readxl)
library(tidyr)
#library(purrr)
source("R/kmk_scrap.R")
scrap_kmk()
data_files <- list.files(path = "data_raw/kmk.org/", full.names = TRUE) %>%
grep("chulart", .,  value = TRUE, invert = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(week = str_remove_all(file, "Covid-19|Covid19|-|_|Werte|Zahlen|neu|.xlsx|data/"),
week = str_extract(week, "[0-9][0-9]|[0-9]"),
week = as.numeric(week),
year = ifelse(week > 45, 2020, 2021)) %>%
arrange(week)
## subset the data
grep_kpi <- function(file) {
#file <- data_files[1, 1] %>% pull()
print(paste0("Reading file: ", file))
data <- file %>%
read_excel(skip = 3) %>%
filter(!is.na(Land),
!grepl("Anmerk", Land))
data_date <- data[1, ] %>%
select(-Land, -contains("summe"), -contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = everything(),
names_to = "state",
values_to = "date"
) %>%
mutate(date = format(as.Date(as.numeric(date), "1899-12-30"), "%Y-%m-%d")) %>%
count(date, sort = TRUE) %>%
.[1, 1] %>%
pull()
kpi_data <- data %>%
select(Land, contains("Bereinigt"),
bl_BW = starts_with("BW", ignore.case = FALSE),
bl_BY = starts_with("BY", ignore.case = FALSE),
bl_BE = starts_with("BE", ignore.case = FALSE),
bl_BB = starts_with("BB", ignore.case = FALSE),
bl_HB = starts_with("HB", ignore.case = FALSE),
bl_HH = starts_with("HH", ignore.case = FALSE),
bl_HE = starts_with("HE", ignore.case = FALSE),
bl_MV = starts_with("MV", ignore.case = FALSE),
bl_NI = starts_with("NI", ignore.case = FALSE),
bl_NW = starts_with("NW", ignore.case = FALSE),
bl_RP = starts_with("RP", ignore.case = FALSE),
bl_SL = starts_with("SL", ignore.case = FALSE),
bl_SN = starts_with("SN", ignore.case = FALSE),
bl_ST = starts_with("ST", ignore.case = FALSE),
bl_SH = starts_with("SH", ignore.case = FALSE),
bl_TH = starts_with("TH", ignore.case = FALSE)) %>%
janitor::clean_names() %>%
mutate(ind = lag(land)) %>%
#select(key = ind, 2, 3) %>%
select(land, everything(), -ind) %>%
mutate(ind = ifelse(grepl("Anteil", land), NA, land),
ind2 = case_when(grepl("ohne Präsen", land) ~ "schools_closed",
grepl("^Schulen mit eingeschränktem", land) ~ "schools_limited",
grepl("Darunter: Schulen", land) ~ "schools_limited_distance",
grepl("einbezogene Schulen", land) ~ "schools_total",
grepl("infizierte Schüler", land) ~ "students_infected",
grepl("Quarantäne befindliche Schüler", land) ~ "students_quarantine",
grepl("einbezogene Schüler", land) ~ "students_total",
grepl("infizierte Lehrkräfte", land) ~ "teacher_infected",
grepl("Quarantäne befindliche Lehrkräfte", land) ~ "teacher_quarantine",
grepl("einbezogene Lehrkräfte", land) ~ "teacher_total",
grepl("Stichtag", land) ~ "date",
TRUE ~ "invalid"),
ind2 = ifelse(ind2 == "invalid", NA, ind2)) %>%
fill(ind2, .direction = "down") %>%
mutate(ind3 = ifelse(grepl("Anteil", land), paste0(ind2, "_perc"), ind2)) %>%
select(category = ind3, contains("bl_"), contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = -category,
names_to = "key",
values_to = "value"
) %>%
filter(!grepl("bereinigte", value)) %>%
filter(!(category == "date" & key == "bereinigter_anteil"))
return(
list(
"data_date" = data_date,
"kpi_data" = kpi_data
)
)
}
df_kpi <- data_files %>%
rowwise() %>%
mutate(kpi = map(file, grep_kpi)) %>%
unnest_wider(kpi)
clean_kpi <- df_kpi %>%
unnest_wider(kpi_data) %>%
select(4:7) %>%
unnest(cols = c(category, key, value)) %>%
mutate(value = as.numeric(value))
heute_str <- gsub("-", "", Sys.Date())
saveRDS(clean_kpi, file = paste0("data_clean/", heute_str, "_clean_kpi_bl.rds"))
clean_kpi
clean_kpi$data_date %>% max()
library(readxl)
library(dplyr)
library(purrr)
library(tibble)
library(tidyr)
library(stringr)
library(lubridate)
lkr_files <- list.files(path = "data_raw/kreise/", pattern = "LKR", full.names = TRUE, recursive = TRUE)
heute_str <- gsub("-", "", Sys.Date())
# read_lkrggplot2read_lkr <- function(file) {
#   map(excel_sheets(file), read_excel, path = file) %>%
#     set_names(excel_sheets(file))
# }
read_lkr <- function(file){
list <- NULL
for(i in seq_along(excel_sheets(file))) {
# get kw
# file <- lkr_files[11]
# i <- 1
kw <- read_excel(file, sheet = i) %>% .[1, 1] %>% pull()
# get rid of comments
first_comment_row <- read_excel(file, sheet = i, skip = 3) %>%
rename(index = 1) %>%
rownames_to_column("id") %>%
filter(grepl("zeile", index, ignore.case = TRUE)) %>%
.[1, 1] %>%
pull()
list[[i]] <- read_excel(file, sheet = i, skip = 3) %>%
select(-contains("bitte")) %>%
rownames_to_column("id") %>%
slice(1:as.numeric(first_comment_row)-1) %>%
mutate_at(vars(contains("summen")), as.numeric) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = -c("id", "LK"),
names_to = "key",
values_to = "values"
) %>%
filter(!is.na(values)) %>%
mutate(woche = kw,
bl = excel_sheets(file)[i],
file = file)
}
return(list)
}
df <- map_df(lkr_files, read_lkr) %>%
mutate(
jahr = str_extract(woche, "[0-9]{4}"),
woche = str_remove_all(woche, ". Kalenderwoche 2021"),
kw_label = paste0(jahr, "-", woche)) %>%
select(-id)
### typo in kw 25 sheet
df <- df %>%
mutate(kw_label = ifelse(grepl("25", file) &
grepl("24", kw_label), "2021-25", kw_label))
# df %>%
#   filter(grepl("Eisenach", key)) %>%
#   filter(grepl("infizierte Schülerinnen|infizierte SuS", LK)) %>%
#   select(kw_label, values) %>%
#   ggplot(aes(kw_label, values)) +
#   geom_point() +
#   geom_line() +
#   #scale_x_date(labels = scales::date_format(format = "%b %d, %Y")) +
#   theme_light() +
#   labs(x = "Date",
#        y = "Proportion of infected students\nin %")
landkreise.shp <- raster::getData("GADM", country = "DEU", level = 2)
land_ccs <- landkreise.shp@data %>%
as_tibble() %>%
select(NAME_2, TYPE_2, CC_2)
#### Example
df_cc <- df %>%
filter(!grepl("Summen", key),
!grepl("0", key)) %>%
#select(bl, key) %>% distinct() %>%
mutate(NAME_2 = str_remove_all(key, "Stadt "),
NAME_2 = str_remove_all(NAME_2, " \\(LKR\\)"),
NAME_2 = str_remove_all(NAME_2, " \\(SKR\\)"),
NAME_2 = str_remove_all(NAME_2, "[0-9]{3} - "),
NAME_2 = str_remove_all(NAME_2, "LK "),
NAME_2 = str_remove_all(NAME_2, "^Kreis "),
NAME_2 = str_remove_all(NAME_2, "Landkreis "),
NAME_2 = str_remove_all(NAME_2, "kreisfreie "),
NAME_2 = str_remove_all(NAME_2, "Landeshauptstadt "),
NAME_2 = str_remove_all(NAME_2, ", Stadt"),
NAME_2 = str_remove_all(NAME_2, ", Landeshauptstadt"),
NAME_2 = str_replace_all(NAME_2, "Ludwigshafen", "Ludwigshafen am Rhein"),
NAME_2 = str_replace_all(NAME_2, "Landau", "Landau in der Pfalz"),
NAME_2 = str_replace_all(NAME_2, "Nordachsen", "Nordsachsen"),
NAME_2 = str_replace_all(NAME_2, "Salzland", "Salzlandkreis"),
NAME_2 = str_replace_all(NAME_2, "Hzgt. Lauenburg", "Herzogtum Lauenburg"),
NAME_2 = str_replace_all(NAME_2, "Schwäbisch-Hall", "Schwäbisch Hall"),
NAME_2 = str_replace_all(NAME_2, "Mülheim a.d.Ruhr", "Mülheim an der Ruhr"),
NAME_2 = str_replace_all(NAME_2, "Oberbergischen Kreis", "Oberbergischer Kreis"),
NAME_2 = str_replace_all(NAME_2, "Rheinisch-Bergischen Kreis", "Rheinisch-Bergischer Kreis"),
NAME_2 = str_replace_all(NAME_2, "Märkischen Kreis", "Märkischer Kreis"),
NAME_2 = str_replace_all(NAME_2, "Altenkirchen", "Altenkirchen (Westerwald)"),
NAME_2 = str_replace_all(NAME_2, "Frankenthal", "Frankenthal (Pfalz)"),
NAME_2 = str_replace_all(NAME_2, "Neustadt a.d. Wstr.", "Neustadt an der Weinstraße"),
NAME_2 = str_replace_all(NAME_2, "Saar-Pfalz-Kreis", "Saarpfalz-Kreis")) %>%
left_join(land_ccs)
clean_kpi_kreise <- df_cc %>%
mutate(category = case_when(grepl("ohne Präsen", LK) ~ "schools_closed",
grepl("^Schulen mit eingeschränktem", LK) ~ "schools_limited",
grepl("Darunter: Schulen", LK) ~ "schools_limited_distance",
grepl("Lerngruppen an Schulen mit eingeschränktem", LK) ~ "schools_classes_distance",
grepl("einbezogene Verwaltungseinheiten", LK) ~ "schools_total",
grepl("infizierte SuS", LK) ~ "students_infected",
grepl("Quarantäne befindliche SuS", LK) ~ "students_quarantine",
grepl("einbezogene Schüler", LK) ~ "students_total",
grepl("infizierte Lehrkräfte", LK) ~ "teacher_infected",
grepl("Quarantäne befindliche Lehrkräfte", LK) ~ "teacher_quarantine",
grepl("einbezogene Lehrkräfte", LK) ~ "teacher_total",
TRUE ~ "invalid")) %>%
select(kw_label, category, key,  CC_2, values)
clean_kpi_kreise
clean_kpi_kreise %>%
pivot_wider(names_from = category,
values_from = values)
getwd()
clean_kpi_kreise %>%
pivot_wider(names_from = category,
values_from = values) %>%
openxlsx::write.xlsx("20210914_kmk_kreise.xlsx")
library(dplyr)
library(stringr)
library(readxl)
library(tidyr)
source("R/kmk_scrap.R")
scrap_kmk()
data_files <- list.files(path = "data_raw/kmk.org/", full.names = TRUE) %>%
grep("chulart", .,  value = TRUE, invert = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(week = str_remove_all(file, "Covid-19|Covid19|-|_|Werte|Zahlen|neu|.xlsx|data/"),
week = str_extract(week, "[0-9][0-9]|[0-9]"),
week = as.numeric(week),
year = ifelse(week > 45, 2020, 2021)) %>%
arrange(week)
## subset the data
grep_kpi <- function(file) {
#file <- data_files[1, 1] %>% pull()
print(paste0("Reading file: ", file))
data <- file %>%
read_excel(skip = 3) %>%
filter(!is.na(Land),
!grepl("Anmerk", Land))
data_date <- data[1, ] %>%
select(-Land, -contains("summe"), -contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = everything(),
names_to = "state",
values_to = "date"
) %>%
mutate(date = format(as.Date(as.numeric(date), "1899-12-30"), "%Y-%m-%d")) %>%
count(date, sort = TRUE) %>%
.[1, 1] %>%
pull()
kpi_data <- data %>%
select(Land, contains("Bereinigt"),
bl_BW = starts_with("BW", ignore.case = FALSE),
bl_BY = starts_with("BY", ignore.case = FALSE),
bl_BE = starts_with("BE", ignore.case = FALSE),
bl_BB = starts_with("BB", ignore.case = FALSE),
bl_HB = starts_with("HB", ignore.case = FALSE),
bl_HH = starts_with("HH", ignore.case = FALSE),
bl_HE = starts_with("HE", ignore.case = FALSE),
bl_MV = starts_with("MV", ignore.case = FALSE),
bl_NI = starts_with("NI", ignore.case = FALSE),
bl_NW = starts_with("NW", ignore.case = FALSE),
bl_RP = starts_with("RP", ignore.case = FALSE),
bl_SL = starts_with("SL", ignore.case = FALSE),
bl_SN = starts_with("SN", ignore.case = FALSE),
bl_ST = starts_with("ST", ignore.case = FALSE),
bl_SH = starts_with("SH", ignore.case = FALSE),
bl_TH = starts_with("TH", ignore.case = FALSE)) %>%
janitor::clean_names() %>%
mutate(ind = lag(land)) %>%
#select(key = ind, 2, 3) %>%
select(land, everything(), -ind) %>%
mutate(ind = ifelse(grepl("Anteil", land), NA, land),
ind2 = case_when(grepl("ohne Präsen", land) ~ "schools_closed",
grepl("^Schulen mit eingeschränktem", land) ~ "schools_limited",
grepl("Darunter: Schulen", land) ~ "schools_limited_distance",
grepl("einbezogene Schulen", land) ~ "schools_total",
grepl("infizierte Schüler", land) ~ "students_infected",
grepl("Quarantäne befindliche Schüler", land) ~ "students_quarantine",
grepl("einbezogene Schüler", land) ~ "students_total",
grepl("infizierte Lehrkräfte", land) ~ "teacher_infected",
grepl("Quarantäne befindliche Lehrkräfte", land) ~ "teacher_quarantine",
grepl("einbezogene Lehrkräfte", land) ~ "teacher_total",
grepl("Stichtag", land) ~ "date",
TRUE ~ "invalid"),
ind2 = ifelse(ind2 == "invalid", NA, ind2)) %>%
fill(ind2, .direction = "down") %>%
mutate(ind3 = ifelse(grepl("Anteil", land), paste0(ind2, "_perc"), ind2)) %>%
select(category = ind3, contains("bl_"), contains("bereinigt")) %>%
mutate_all(as.character) %>%
pivot_longer(
cols = -category,
names_to = "key",
values_to = "value"
) %>%
filter(!grepl("bereinigte", value)) %>%
filter(!(category == "date" & key == "bereinigter_anteil"))
return(
list(
"data_date" = data_date,
"kpi_data" = kpi_data
)
)
}
df_kpi <- data_files %>%
rowwise() %>%
mutate(kpi = map(file, grep_kpi)) %>%
unnest_wider(kpi)
clean_kpi <- df_kpi %>%
unnest_wider(kpi_data) %>%
select(4:7) %>%
unnest(cols = c(category, key, value)) %>%
mutate(value = as.numeric(value))
clean_kpi
heute_str <- gsub("-", "", Sys.Date())
saveRDS(clean_kpi, file = paste0("data_clean/", heute_str, "_clean_kpi_bl.rds"))
library(dplyr)
library(stringr)
library(lubridate)
library(purrr)
library(tidyr)
library(ggplot2)
kpi_kreis <- list.files(path = "data_clean/", pattern = "kreise", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1] %>%
readRDS() %>%
mutate(kw_label = ifelse(nchar(kw_label) == 7, kw_label, str_replace_all(kw_label, "-", "-0")),
values = as.numeric(values),
week_date = as.Date(paste0(kw_label, "-1"), "%Y-%U-%u"))
kreise_wide <- kpi_kreis %>%
pivot_wider(
names_from = "category",
values_from = "values",
values_fill = 0
) %>%
mutate(students_perc = students_infected/students_total*100,
teacher_perc = teacher_infected/teacher_total*100)
kpi_kreis
list.files(path = "data_clean/", pattern = "kreise", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1]
list.files("data_clean/", pattern =  "_clean_kpi_bl.rds", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1]
library(dplyr)
library(tidyr)
library(stringr)
library(lubridate)
library(ggplot2)
bl_data <- list.files("data_clean/", pattern =  "_clean_kpi_bl.rds", full.names = TRUE) %>%
as_tibble() %>%
rename(file = value) %>%
mutate(datum = str_extract(file, "[0-9]{8}"),
datum = ymd(datum)) %>%
arrange(desc(datum)) %>%
pull(file) %>%
.[1] %>%
readRDS() %>%
filter(year(data_date) > 2020) %>%
pivot_wider(
names_from = category,
values_from = value
) %>%
mutate(students_perc = students_infected/students_total*100,
teacher_perc = teacher_infected/teacher_total*100)
bl_data
View(bl_data)
bl_data
as_date("bl_data")
as_date("44252")
as.Date("44252", origin = "1970-01-01")
as.Date(44252, origin = "1970-01-01")
as.Date(44252, origin = "1970-01-01")
as.Date(44252, origin = "1900-01-01")
bl_data %>%
mutate(date = as.Date(date, origin = "1900-01-01"))
bl_data %>%
mutate(date = as.Date(date, origin = "1900-01-01")) %>% View()
bl_data %>%
mutate(date = as.Date(date, origin = "1900-01-01")) %>% readr::write_excel_csv2("kmk_bl-20211018.csv")
